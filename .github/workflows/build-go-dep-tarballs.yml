name: Build and Release Go Dependency Tarballs

on:
  schedule:
    - cron: '0 3 * * *'
  workflow_dispatch:

jobs:
  find-new-tags:
    runs-on: ubuntu-latest
    outputs:
      build_matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up tools
        run: sudo apt-get update && sudo apt-get install -y jq git

      - name: Get tags already released
        id: released-tags
        run: |
          # collect all tag names that already have a release in this repo
          gh api repos/${{ github.repository }}/releases --paginate > releases.json
          jq -r '.[].tag_name' releases.json > released_tags.txt

      - name: Prepare build matrix
        id: set-matrix
        shell: bash
        run: |
          matrix="$(ci/build-matrix.sh configs/go_modules.json released_tags.txt)"
          echo "matrix=${matrix}" >> ${GITHUB_OUTPUT}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-release:
    needs: find-new-tags
    runs-on: ubuntu-latest
    # Skip if no new tags
    if: needs.find-new-tags.outputs.build_matrix != '[]'
    strategy:
      matrix:
        include: ${{ fromJson(needs.find-new-tags.outputs.build_matrix) }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go and jq
        run: sudo apt-get update && sudo apt-get install -y jq git go

      - name: Build tarball
        run: |
          jq -n \
            --arg name "${{ matrix.name }}" \
            --arg repo "${{ matrix.repo }}" \
            --arg vcs "${{ matrix.vcs }}" \
            --arg tag "${{ matrix.tag }}" \
            '{name: $name, repo: $repo, vcs: $vcs, tag: $tag}' \
            | bash ci/build-deps.sh

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ matrix.tag }}
          name: "${{ matrix.name }} ${{ matrix.tag }}"
          body: |
            Automated build for ${{ matrix.name }} tag ${{ matrix.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload tarball to Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ matrix.tag }}
          files: ${{ matrix.name }}-${{ matrix.tag#v }}-deps.tar.xz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
